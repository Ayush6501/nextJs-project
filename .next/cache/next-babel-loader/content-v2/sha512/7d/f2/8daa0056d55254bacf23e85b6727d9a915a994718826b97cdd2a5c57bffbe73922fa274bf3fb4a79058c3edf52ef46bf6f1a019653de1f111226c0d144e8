{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ayush\\\\Desktop\\\\Projects\\\\Personal\\\\React\\\\COURSE REWORK\\\\nextjs-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport MeetupDetails from \"../../components/meetups/MeetupDetails\";\nimport { MongoClient } from 'mongodb';\n\nfunction MeetupDetailsPage() {\n  return /*#__PURE__*/_jsxDEV(MeetupDetails, {\n    img: \"https://upload.wikimedia.org/wikipedia/commons/thumb/a/ae/Bandra_Worli_Sea-Link_%28cropped%29.jpg/1024px-Bandra_Worli_Sea-Link_%28cropped%29.jpg\",\n    title: \"Meetup 1\",\n    address: \"Some Address 8, 2514, ABC\",\n    description: \"Our first meetup\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n}\n\n;\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://Ayush:abcd4321@cluster0.wuc75.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\n;\nexport async function getStaticProps(context) {\n  const meetupId = context.params;\n  const client = await MongoClient.connect('mongodb+srv://Ayush:abcd4321@cluster0.wuc75.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: meetupId\n  });\n  client.close();\n  console.log(meetupId);\n  return {\n    props: {\n      meetupData: {\n        selectedMeetup\n      }\n    }\n  };\n}\n;\nexport default MeetupDetailsPage;","map":{"version":3,"sources":["C:/Users/Ayush/Desktop/Projects/Personal/React/COURSE REWORK/nextjs-project/pages/[meetupId]/index.js"],"names":["MeetupDetails","MongoClient","MeetupDetailsPage","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","console","log","props","meetupData"],"mappings":";;AAAA,OAAOA,aAAP,MAA0B,wCAA1B;AACA,SAAQC,WAAR,QAA0B,SAA1B;;AAEA,SAASC,iBAAT,GAA8B;AAC1B,sBACI,QAAC,aAAD;AACA,IAAA,GAAG,EAAC,kJADJ;AAEA,IAAA,KAAK,EAAC,UAFN;AAGA,IAAA,OAAO,EAAC,2BAHR;AAIA,IAAA,WAAW,EAAC;AAJZ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;AAAA;AAED,OAAO,eAAeC,cAAf,GAAgC;AACnC,QAAMC,MAAM,GAAG,MAAMH,WAAW,CAACI,OAAZ,CAAoB,6FAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAsCC,OAAtC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACHC,IAAAA,QAAQ,EAAE,KADP;AAEHC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAYC,MAAM,KAAK;AAC1BC,MAAAA,MAAM,EAAE;AACJC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AADN;AADkB,KAAL,CAAlB;AAFJ,GAAP;AAQH;AAAA;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC1C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAzB;AAEA,QAAMd,MAAM,GAAG,MAAMH,WAAW,CAACI,OAAZ,CAAoB,6FAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMe,cAAc,GAAG,MAAMhB,iBAAiB,CAACiB,OAAlB,CAA0B;AAACb,IAAAA,GAAG,EAAEQ;AAAN,GAA1B,CAA7B;AAEAf,EAAAA,MAAM,CAACS,KAAP;AAEAY,EAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACF,SAAO;AACHQ,IAAAA,KAAK,EAAE;AACHC,MAAAA,UAAU,EAAE;AAACL,QAAAA;AAAD;AADT;AADJ,GAAP;AAKD;AAAA;AAED,eAAerB,iBAAf","sourcesContent":["import MeetupDetails from \"../../components/meetups/MeetupDetails\";\r\nimport {MongoClient} from 'mongodb';\r\n\r\nfunction MeetupDetailsPage () {\r\n    return (\r\n        <MeetupDetails\r\n        img='https://upload.wikimedia.org/wikipedia/commons/thumb/a/ae/Bandra_Worli_Sea-Link_%28cropped%29.jpg/1024px-Bandra_Worli_Sea-Link_%28cropped%29.jpg'\r\n        title='Meetup 1'\r\n        address='Some Address 8, 2514, ABC'\r\n        description='Our first meetup'\r\n        />\r\n    );\r\n};\r\n\r\nexport async function getStaticPaths() {\r\n    const client = await MongoClient.connect('mongodb+srv://Ayush:abcd4321@cluster0.wuc75.mongodb.net/meetups?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n\r\n    const meetupsCollection = db.collection('meetups');\r\n\r\n    const meetups = await meetupsCollection.find({}, { _id: 1}).toArray();\r\n\r\n    client.close();\r\n\r\n    return {\r\n        fallback: false,\r\n        paths: meetups.map(meetup => ({\r\n            params: {\r\n                meetupId: meetup._id.toString()\r\n            }\r\n        }))\r\n    }\r\n};\r\n\r\nexport async function getStaticProps(context) {\r\n    const meetupId = context.params;\r\n\r\n    const client = await MongoClient.connect('mongodb+srv://Ayush:abcd4321@cluster0.wuc75.mongodb.net/meetups?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n\r\n    const meetupsCollection = db.collection('meetups');\r\n\r\n    const selectedMeetup = await meetupsCollection.findOne({_id: meetupId});\r\n\r\n    client.close();\r\n\r\n    console.log(meetupId);\r\n  return {\r\n      props: {\r\n          meetupData: {selectedMeetup}\r\n      }\r\n  }\r\n};\r\n\r\nexport default MeetupDetailsPage;\r\n"]},"metadata":{},"sourceType":"module"}